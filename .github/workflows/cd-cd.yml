# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "feature/**", "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B -DskipTests package --file pom.xml

  test:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ success() && github.ref_name != 'main' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

  build-docker-image:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ success() && github.event_name == 'push' && (github.ref_name == 'develop' || github.ref_name == 'main') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B -DskipTests package --file pom.xml

      - name: Sets environment vars for dev
        if: ${{ github.ref_name == 'develop' }}
        run: |
          echo "docker_image_target=dev" >> $GITHUB_ENV
      - name: Sets environment vars for prod
        if: ${{ github.ref_name == 'main' }}
        run: |
          echo "docker_image_target=prod" >> $GITHUB_ENV

      - name: Get current version
        run: |
          echo "current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: optbalance/my-project
          tags: |
            type=raw, value=${{env.docker_image_target}}-${{env.current_version}}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
